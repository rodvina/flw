<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Required for Spring MVC to dispatch requests to @Controllers -->
    <annotation-driven/>
    
    <!-- Enables ehcache -->
    <ehcache:annotation-driven cache-manager="cacheManager"/>
    
    <beans:bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    	<beans:property name="configLocation" value="classpath:ehcache.xml"/>
    </beans:bean>
    
    <!-- Enables conversion service for formatting and conversions -->
    <beans:bean id="conversionService"
          class="org.springframework.format.support.FormattingConversionServiceFactoryBean"/>
          
     <!-- needed for <spring:eval expression="@appProperties.getProperty -->
	<util:properties id="props" location="classpath:config.properties"/>

	<!-- needed only if using @Value -->
	<context:property-placeholder properties-ref="props"/>
    
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!--  Standard Spring MessageSource implementation                    -->
	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
	  <beans:property name="basename" value="messages" />
	</beans:bean>
	
	<beans:bean id="jsonConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<beans:property name="supportedMediaTypes" value="application/json" />
	</beans:bean>

	<!-- Client -->
	<beans:bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
<!-- 
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jsonConverter" />
			</beans:list>
		</beans:property> -->
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory  -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	
	<!--  THYMELEAF-SPECIFIC ARTIFACTS                                    -->
	<!--  TemplateResolver <- TemplateEngine <- ViewResolver             
	<beans:bean id="templateResolver"
	      class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
	  <beans:property name="prefix" value="/WEB-INF/templates/" />
	  <beans:property name="suffix" value=".html" />
	  <beans:property name="templateMode" value="HTML5" />

	</beans:bean>
	  
	<beans:bean id="templateEngine"
	      class="org.thymeleaf.spring3.SpringTemplateEngine">
	  <beans:property name="templateResolver" ref="templateResolver" />
	</beans:bean>
	 
	<beans:bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
	  <beans:property name="templateEngine" ref="templateEngine" />
	</beans:bean>  
	 --> 
</beans:beans>
